# This workflow is responsible for all kinds of integration tests run on pull request.
# Those tests depend on a container image so in the first job we wait for the image build to succeed.

name: PR Integration

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "tests/performance/**"
      - "OWNERS"
      - "CODEOWNERS"
      - "sec-scanners-config.yaml"
      - ".github/**" #Ignoring since build job isn't triggered on the workflow directory changes
    branches:
      - mod-dev
      - 'release-**'

jobs:
  wait-for-image-build:
    environment: ${{ github.event.pull_request.author_association != 'COLLABORATOR' && github.event.pull_request.author_association != 'OWNER' && 'restricted' || 'internal' }}
    name: Wait for image build
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/wait-for-job-succeed-or-fail
        with:
          job-name: 'pull-api-gateway-manager-build'
          github-auth-token: ${{ secrets.GITHUB_TOKEN }}

  integration-tests:
    environment: ${{ github.event.pull_request.author_association != 'COLLABORATOR' && github.event.pull_request.author_association != 'OWNER' && 'restricted' || 'internal' }}
    name: Integration tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: [wait-for-image-build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/integration-tests
        with:
          prerequisites_target: install-prerequisites
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          oidc_issuer_url: ${{ secrets.OIDC_ISSUER_URL }}
          manager_image: "europe-docker.pkg.dev/kyma-project/dev/api-gateway-manager:PR-${{github.event.number}}"

  integration-tests-istio-module:
    environment: ${{ github.event.pull_request.author_association != 'COLLABORATOR' && github.event.pull_request.author_association != 'OWNER' && 'restricted' || 'internal' }}
    name: Integration tests with Istio module
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: [wait-for-image-build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/integration-tests
        with:
          prerequisites_target: install-prerequisites-with-istio-from-manifest
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          oidc_issuer_url: ${{ secrets.OIDC_ISSUER_URL }}
          manager_image: "europe-docker.pkg.dev/kyma-project/dev/api-gateway-manager:PR-${{github.event.number}}"

  upgrade-tests:
    environment: ${{ github.event.pull_request.author_association != 'COLLABORATOR' && github.event.pull_request.author_association != 'OWNER' && 'restricted' || 'internal' }}
    name: Upgrade tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: [wait-for-image-build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: get-test-img # after merge to main it should be replaced by install-latest-release script
        name: get-test-img
        run: |
          MOD_DEV_SHA=$(git log -n 1 --pretty=format:"%H" origin/mod-dev)
          echo "IMG=europe-docker.pkg.dev/kyma-project/prod/api-gateway-manager:v$(git show -s --date=format:'%Y%m%d' --format=%cd "$MOD_DEV_SHA")-$(printf %.8s "$MOD_DEV_SHA")" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/upgrade-test
        with:
          manager_image: ${{ steps.test-get-test-img.outputs.IMG }}
          test_upgrade_img: "europe-docker.pkg.dev/kyma-project/dev/api-gateway-manager:PR-${{ github.event.number }}"
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          oidc_issuer_url: ${{ secrets.OIDC_ISSUER_URL }}
