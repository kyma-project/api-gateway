name: Pull Request

permissions:
  contents: read
  
on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]
    branches:
      - "main"
      - 'release-**'
      - 'feat/**'

env:
  GITLEAKS_VERSION: 8.21.0

jobs:
  skip_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf
        id: skip_check
        with:
          github_token: ${{ github.token }}
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
  gitleaks:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Fetch gitleaks ${{ env.GITLEAKS_VERSION }}
        run: curl -Lso gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v${{ env.GITLEAKS_VERSION }}/gitleaks_${{ env.GITLEAKS_VERSION }}_linux_x64.tar.gz && tar -xvzf ./gitleaks.tar.gz
      - name: Run gitleaks
        # Scan commits between base and head of the pull request
        run: ./gitleaks detect --log-opts=${PULL_BASE_SHA}...${PULL_HEAD_SHA} --verbose --redact
        env:
          PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          PULL_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

  build-image:
    name: Build manager image
    needs: skip_duplicate
    if: ${{ github.event.pull_request.draft == false && needs.skip_duplicate.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/build-manager-image
        with:
          operator-image-name: "api-gateway-manager:PR-${{github.event.number}}"

  unit-tests:
    name: Unit tests & lint
    needs: skip_duplicate
    if: ${{ github.event.pull_request.draft == false && needs.skip_duplicate.outputs.should_skip != 'true' }}
    uses: ./.github/workflows/call-unit-lint.yaml
    secrets: inherit

  integration-tests:
    name: Integration tests
    needs: [skip_duplicate, build-image]
    if: ${{ github.event.pull_request.draft == false && needs.skip_duplicate.outputs.should_skip != 'true' }}
    uses: ./.github/workflows/call-pull-integration.yaml
    secrets: inherit

  migration-downtime-tests-k3d:
    name: Zero Downtime Migration Tests
    runs-on: ubuntu-latest
    needs: [skip_duplicate, build-image]
    if: ${{ needs.skip_duplicate.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        handler: [ "no_auth", "allow", "noop", "jwt", "oauth2_introspection" ]
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/load-manager-image
      - uses: ./.github/actions/e2e-test-k3d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HANDLER: ${{ matrix.handler }}
        with:
          manager_image: "api-gateway-manager:PR-${{github.event.number}}"
          test_make_target: test-migration-zero-downtime-${{ matrix.handler }}

  verify-pins:
    name: Verify-commit-pins
    needs: skip_duplicate
    if: ${{ github.event.pull_request.draft == false && needs.skip_duplicate.outputs.should_skip != 'true' }}
    uses: ./.github/workflows/call-verify-commit-pins.yaml
    secrets: inherit

  pull-request-status:
    needs: [ build-image, unit-tests, integration-tests, migration-downtime-tests-k3d, verify-pins ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
