name: "Create release"

permissions:
  id-token: write # This is required by image-builder
  contents: write # Read is required by image-builder, write is required to push artifact

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Create release"
        default: ""
        required: true
      since:
        description: "Changelog since"
        default: ""
        required: false

jobs:
  check-prerequisites:
    name: Check release prerequisites
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check security-scanner config
        shell: bash
        run: cat sec-scanners-config.yaml | grep -q "europe-docker.pkg.dev/kyma-project/prod/api-gateway/releases/api-gateway-manager:${{ github.event.inputs.name }}"
  build-image:
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    needs: [check-prerequisites]
    with:
      name: api-gateway/releases/api-gateway-manager
      dockerfile: Dockerfile
      context: .
      build-args: |
        VERSION=${{ github.event.inputs.name }}
      tags: "${{ github.event.inputs.name }}"

  unit-tests:
    uses: ./.github/workflows/call-unit-lint.yaml

  integration-tests:
    needs: build-image
    uses: ./.github/workflows/call-integration-release.yaml
    with:
      image: "europe-docker.pkg.dev/kyma-project/prod/api-gateway/releases/api-gateway-manager:${{ github.event.inputs.name }}"
    secrets: inherit

  create-draft:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: [build-image, unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/create_changelog.sh ${{ github.event.inputs.name }} ${{ github.event.inputs.since }}

      - name: Create draft release
        id: create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./scripts/create_draft_release.sh ${{ github.event.inputs.name }})
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

      - name: Create lightweight tag
        run: |
          git tag ${{ github.event.inputs.name }}
          git push origin ${{ github.event.inputs.name }}

    outputs:
      release_id: ${{ steps.create-draft.outputs.release_id }}

  publish-release:
    name: Publish release
    needs: [create-draft]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Publish release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_assets.sh ${{ github.event.inputs.name }} ${{ needs.create-draft.outputs.release_id }}

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_release.sh ${{ needs.create-draft.outputs.release_id }}

  notify:
    runs-on: ubuntu-latest
    needs: publish-release
    if: success()
    steps:
      - name: Notify
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          webhook: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
          webhook-type: webhook-trigger
          payload-templated: true
          payload: |
            repository: ${{ github.repository }},
            release: ${{ inputs.name }}