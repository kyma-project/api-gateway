name: "Create release"

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Create release"
        default: ""
        required: true
      since:
        description: "Changelog since"
        default: ""
        required: false

jobs:
  check-prerequisites:
    name: Check release prerequisites
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq
        shell: bash
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y

      - name: Check security-scanner config
        shell: bash
        run: |
          if [[ $( yq eval ".protecode[0]" sec-scanners-config.yaml ) == "europe-docker.pkg.dev/kyma-project/prod/api-gateway-manager:${{ github.event.inputs.name }}" ]]; then
            exit 0
          else
            echo "Error: api-gateway-manager image tag in sec-scanners-config doesn't match release ${{ github.event.inputs.name }}"
            exit 1
          fi
 
  create-draft:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: [check-prerequisites]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/create_changelog.sh ${{ github.event.inputs.name }} ${{ github.event.inputs.since }}

      - name: Create draft release
        id: create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./scripts/create_draft_release.sh ${{ github.event.inputs.name }})
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

      - name: Create lightweight tag
        run: |
          git tag ${{ github.event.inputs.name }}
          git push origin ${{ github.event.inputs.name }}

    outputs:
      release_id: ${{ steps.create-draft.outputs.release_id }}

  publish-release:
    name: Publish release
    needs: [create-draft]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: autotelic/action-wait-for-status-check@6556cf50c8fb6608412945382eae73581f56cbb4
        name: Build image
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          statusName: "rel-api-gateway-manager-build"
          timeoutSeconds: "1800"
      - name: Check that build status is success
        if: steps.wait-for-build.outputs.state != 'success'
        run: exit 1

      - name: Publish release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_assets.sh ${{ github.event.inputs.name }} ${{ needs.create-draft.outputs.release_id }}

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_release.sh ${{ needs.create-draft.outputs.release_id }}
